{
  "name": "rtp-pipeline",
  "label": "RTP Pipeline: Reproducible Tract Profiles Pipeline (DTIInit + MRtrix3 + ET + LiFE + AFQ + ANTs). ",
  "description": "DEBUG Edition. This gear contains a multi-step pipeline designed to run MRtrix3, LiFE, ET, and AFQ. The preprocessing is done in RTP-preproc. MRTrix3 + Ensemble Tractography + LiFE generate a connectome which is then run through Automated Fiber Quantification (AFQ). AFQ generates tract profiles of tissue properties for major fiber tracts in the brain. This gear also generates AFQ Browser outputs for visualization. Required inputs are (1) DWI NIfTI image, (2) BVEC file, (3) BVAL file, and (4) and Anatomical NIfTI file - which is optional and will be used to align the DWI data, if provided.",
  "maintainer": "Garikoitz Lerma <garikoitz@gmail.com>",
  "author": "Lerma et al, Yeatman et al., Stanford VISTA Lab, FMRIB Software Lab, MRTrix, Pestilli et al., Takemura et al.",
  "cite": "Garikoitz Lerma-Usabiaga, Michael L. Perry, and Brian A. Wandell. 2019.  Reproducible Tract Profiles (RTP): from diffusion MRI acquisition to publication, bioRxiv, doi: https://doi.org/10.1101/680173",
  "url": "https://github.com/vistalab/RTP-pipeline",
  "source": "https://github.com/vistalab/RTP-pipeline",
  "license": "Other",
  "flywheel": "0",
  "version": "4.2.9",
  "custom": {
    "docker-image": "vistalab/rtp-pipeline:4.2.9",
    "gear-builder": {
      "image": "vistalab/rtp-pipeline:4.2.9",
      "category": "analysis"
    },
    "flywheel": {
      "suite": "RTP: Reproducible Tract Profiles"
    }
  },
  "inputs": {
    "anatomical": {
      "description": "Anatomical (e.g., t1-weighted) NIfTI file. The pipeline asumes that the diffusion data is in the same space as the anatomical and that the aligmnent was performed in the preprocessing step.",
      "base": "file",
      "type": {
        "enum": [
          "nifti"
        ]
      }
    },
    "fs": {
      "description": "zip file generated in the Freesurfer gear with some base files (brainmask and aparc+aseg) and a folder with all the ROIs generated in the FS gear. It will contain the subcortical and cortical parcellations from freesurfer, as well as hippocampal and thalamic segmentations, a cerebellum atlas and visual cortex segmentation provided by Neuropythy. Please check FS gear for more information. This .zip file can be manually generated and uploaded as an acquisition.  zip file format: in the base it will contain only a folder called fs/. Inside this folder, there will be some files (brainmask.nii.gz, aparc+aseg.nii.gz...) and a folder called ROIs. Therefore, inside fs/ROIs/ any roi can be found. The system will unzip the fs.zip internally and at the beginning of the pipeline it will check if the ROIs are there. The ROis can be dilated or concatenated, see the documentation.",
      "base": "file",
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "tractparams": {
      "description": "csv file with all the options to create the tracts. One example csv file will be uploaded to the github wiki page with the documentation. Any error in this csv file will make the pipeline fail at some point. The ROI names specified in this file will be expected to find in the fs.zip inside the fs folder. IMPORTANT: the code is preparared so that the fs.zip will be read from the output of the FS gear. But the ROIs can be manually generated. zip file format: in the base it will contain only a folder called fs/. Inside this folder, there will be some files (brainmask.nii.gz, aparc+aseg.nii.gz...) and a folder called ROIs. Therefore, inside fs/ROIs/ any roi can be found. The system will unzip the fs.zip internally and at the beginning of the pipeline it will check if the ROIs are there. The ROis can be dilated or concatenated, see the documentation." ,
      "base": "file",
      "optional": false,
      "type": {
        "enum": [
          "csv"
        ]
      }
    },
    "dwi": {
      "description": "DWI NIfTI file",
      "base": "file",
      "type": {
        "enum": [
          "nifti"
        ]
      }
    },
    "bval": {
      "description": "BVAL file",
      "base": "file",
      "type": {
        "enum": [
          "bval"
        ]
      }
    },
    "bvec": {
      "description": "BVEC file.",
      "base": "file",
      "type": {
        "enum": [
          "bvec"
        ]
      }
    }
  },
  "config": {
    "numberOfNodes": {
      "description": "AFQ: The number of nodes to represent each fiber.",
      "default": 100,
      "type": "integer"
    },
    "fiberWeighting": {
      "description": "RTP: Set the amount of weighting that will be applied when calculating tract profiles. 0 means that each fiber contributes equally. 1 means that we apply gaussian weighting where each fibers contribution to the measurement at a node is weighted by its gaussian distance from the tract core. Values greater than 1 mean that the core of the tract is weighted more heavily and fibers further from the core are weighted less heavily (faster fall off than a gaussian).  See ComputeTractProperties.",
      "default": 1,
      "type": "integer"
    },
    "track_faFodThresh": {
      "description": "MRTRIX: Stopping criteria when tracking, FA for DTI and FOD for CSD. Mrtrix uses defaults depending on the algo and depending on the algo these number will refer to FA or FOD. If 999 use the defaults, otherwise use the value here. See mrTrix docs for defaults",
      "default": 999,
      "type": "number"
    },
    "track_faMaskThresh": {
      "description": "MRTRIX: FA mask threshold from which to initialize tracking. It is used to create the wmMask that is used to seed the whole brain connectome in mrTrix",
      "default": 0.3,
      "type": "number"
    },
    "mrtrix_mrTrixAlgo": {
      "description": "MRTRIX: Tracking algorithm for mrTrix's tckgen. Options are: iFOD1, iFOD2, SD_STREAM, Tensor_Det, Tensor_prob. DEFAULT='iFOD2'",
      "default": "iFOD2",
      "type": "string"
    },
    "mrtrix_useACT": {
      "description": "MRTRIX: Use ACT for tracking. DEFAULT=False",
      "default": false,
      "type": "boolean"
    },
    "mrtrix_autolmax": {
      "description": "MRTRIX: Calculate lmax automatically from number of directions. DEFAULT=True",
      "default": false,
      "type": "boolean"
    },
    "mrtrix_lmax": {
      "description": "MRTRIX: specify lmax for CSD. Only used if mrtrix_autolmax==0. DEFAULT=6",
      "default": 6,
      "type": "integer"
    },
    "life_runLife": {
      "description": "LiFE: Run LiFE algorithm. DEFAULT=true",
      "default": true,
      "type": "boolean"
    },
    "life_saveOutput": {
      "description": "LiFE: Save outputs from LiFE algorithm. DEFAULT=true",
      "default": false,
      "type": "boolean"
    },
    "life_discretization": {
      "description": "LiFE: Discretization parameter (this parameter defines the resolution of the Phi tensor in describing the orientation of the fascicles in the connectome (number of orientations encoded in Phi, more specifically the size of Phi in mode 1) DEFAULT=360",
      "default": 360,
      "type": "number"
    },
    "life_num_iterations": {
      "description": "LiFE: Number of iterations for LiFE algorithm. DEFAULT=10",
      "default": 10,
      "type": "number"
    },
    "life_test": {
      "description": "LiFE: Run LiFE in test mode. DEFAULT=False",
      "default": false,
      "type": "boolean"
    },
    "life_writePDB": {
      "description": "LiFE: Write fibers out in PDB. This is a legacy format for the program Quench. DEFAULT=False",
      "default": false,
      "type": "boolean"
    },
    "ET_numberFibers": {
      "description": "ET: Number of fibers to generate in each tractotram. As many tractograms as specified with ET_maxlength and ET_angleValues number of pairs will be generated and concatenated. DEFAULT=200000",
      "default": 200000,
      "type": "number"
    },
    "ET_minlength": {
      "description": "ET: Minimum fiber length (in mm). This value will be used for mrTrix regardless of ET. If 999, the default from mrTrix will be used (see mrTrix documentation). DEFAULT=999",
      "default": 999,
      "type": "number"
    },
    "ET_maxlength": {
      "description": "ET: Maximum fiber length (in mm) used in the whole brain tractrogram tracking. IMPORTANT: it requires the same amount of values as ET_angleValues. Each ET_maxlength value will be matched in position to every ET_angleValues. DEFAULT=100,150,100,150,200,150,200",
      "default": "100,150,100,150,200,150,200",
      "type": "string"
    },
    "ET_angleValues": {
      "description": "ET: Angle cutoff values to use during ET tracking (comma-separated list). Using one value is the equivalent of not using ET. IMPORTANT: there need to be the same amount of ET_maxlength values than ET_angleValues. DEFAULT='45, 45, 25, 25, 25,  5,  5'",
      "default": "45, 45, 25, 25, 25,  5,  5",
      "type": "string"
    },
    "ET_track_stepSizeMm": {
      "description": "ET: track stepSizeMm.  DEFAULT=999",
      "default": 999,
      "type": "number"
    }
  }
}
